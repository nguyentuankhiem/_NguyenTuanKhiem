@page "/todolist" 

@using Newtonsoft.Json;

<h3>TodoList</h3>

<div class="form-group">
    <label for="title">Title: </label>
    <input type="text" @bind="NewItem" @onkeyup="EnterCatch" />

    <button type="submit" @onclick="Add" class="btn btn-outline-dark">Add</button>
    <button type="submit" @onclick="Clear" class="btn btn-outline-dark">Clear all</button>
    <button type="submit" @onclick="Save" class="btn btn-outline-dark">Save</button>
    <i>@Announce</i>
</div>

<table class="table">
    <thead>
        <tr style="text-align:center">
            <th>Title</th>
            <th>Complete</th>
            <th>Remove</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in _todoList)
         {
            <tr style="text-align:center">
                <td style="text-align:left; @(item.IsComplete ? "text-decoration: line-through" : "")">@item.Title</td>
                <td style="text-align:center">
                    <input type="checkbox" @bind="item.IsComplete" @onclick="(() => Announce = string.Empty)" />
                </td>
                <td style="text-align:center">
                    <button type="submit" class="btn btn-outline-dark" @onclick="(() => Remove(item))">Remove</button>
                </td>
            </tr>
         }
    </tbody>
</table>

@code {
    private bool _isSaved { get; set; } = false;

    private readonly string _pathSaveToDoList = "Data//tdl.json";

    public string Announce { get; set; }

    public string NewItem { get; set; }

    private List<TodoItem> _todoList = new List<TodoItem>();

    public List<TodoItem> GetData()
    {
        if (File.Exists(_pathSaveToDoList))
        {
            using var file = File.OpenText(_pathSaveToDoList);
            var serializer = new JsonSerializer();
            _todoList = serializer.Deserialize(file, typeof(List<TodoItem>)) as List<TodoItem>;
        }

        return _todoList;
    }

    protected override void OnInitialized()
    {
        _todoList = GetData();
    }

    public void Add()
    {
        if (!string.IsNullOrWhiteSpace(NewItem))
        {
            _todoList.Add(new TodoItem(title: NewItem));
            NewItem = string.Empty;
            Announce = string.Empty;
        }
    }

    public void Clear()
    {
        if (_isSaved)
        {
            _todoList.Clear();
            Announce = "Save again to clear all data in Json file";
        }
        else
        {
            Announce = "Save before clear";
        }
    }

    public void Remove(TodoItem item)
    {
        _todoList.Remove(item);
        Announce = string.Empty;
    }


    public void Save()
    {
        using var file = File.CreateText(_pathSaveToDoList);
        var serializer = new JsonSerializer();
        serializer.Serialize(file, _todoList);
        _isSaved = true;
        Announce = "Save successfully to the folder Data";


    }

    public void EnterCatch(KeyboardEventArgs eventArgs)
    {
        if (eventArgs.Key == "Enter")
        {
            Add();
        }
    }

}
