@page "/pomodoro"

<h3>Pomodoro</h3>

<center>
    <h2>@min : @sec </h2>

    <div class="form-group">
        <button type="submit" class="btn btn-outline-success" @onclick="StartAsync">Start</button>
        <button type="submit" class="btn btn-outline-danger" @onclick="StopAsync">Stop</button>
        <button type="submit" class="btn btn-outline-info" @onclick="ResetAsync">Reset</button>
    </div>
</center>

<i>count every five minutes: @count</i>


@code {
    private System.Timers.Timer timer;

    private int min = 25;
    private int sec = 00;
    private int count = 0;

    public async void CountAsync(object source, System.Timers.ElapsedEventArgs e)
    {
        if (sec > 0)
        {
            sec -= 1;
            if (sec == 0 && min % 5 == 0)
            {
                count += 1;
            }
        }
        else if (sec == 0 && min > 0)
        {
            min -= 1;
            sec = 59;
            if (min == 0)
            {
                sec = 0;
                timer.Stop();
                timer.Enabled = false;
            }
        }
        await InvokeAsync(StateHasChanged);
    }

    public async Task StartAsync()
    {
        if (timer != null)
        {
            timer.Dispose();
        }
        timer = new System.Timers.Timer(1000);
        timer.Elapsed += CountAsync;
        timer.Enabled = true;
        timer.AutoReset = true;
    }

    public async Task StopAsync()
    {
        timer.Stop();
        timer.Enabled = false;
    }

    public async Task ResetAsync()
    {
        sec = 00;
        min = 25;
        count = 0;
        timer.Stop();
    }
}
